g =[0;
    0;
    9.81];
dt = 1e-3;

R_BI = [cos(z)*cos(y) cos(z)*sin(x)*sin(y)-cos(x)*sin(z) sin(x)*sin(z)+cos(x)*cos(z)*sin(y); ...
        cos(y)*sin(z) cos(x)*cos(z)+sin(x)*sin(z)*sin(y) cos(x)*sin(z)*sin(y)-cos(z)*sin(x); ...
        -sin(y) cos(y)*sin(x) cos(x)*cos(y)];
 
R_IB = [cos(z)*cos(y) cos(y)*sin(z) -sin(y); ...
        cos(z)*sin(x)*sin(y)-cos(x)*sin(z) cos(x)*cos(z)+sin(x)*sin(z)*sin(y) cos(y)*sin(x); ...
        sin(x)*sin(z)+cos(x)*cos(z)*sin(y) cos(x)*sin(z)*sin(y)-cos(z)*sin(x) cos(x)*cos(y)];
 

% Create constant matrices
ca = 0.5*dt^2;
A = [1  dt ca 0  0  0  0  0  0  0  0  0; ...
     0  1  dt 0  0  0  0  0  0  0  0  0; ...
     0  0  1  0  0  0  0  0  0  0  0  0; ...
     0  0  0  1  dt ca 0  0  0  0  0  0; ...
     0  0  0  0  1  dt 0  0  0  0  0  0; ...
     0  0  0  0  0  1  0  0  0  0  0  0; ...
     0  0  0  0  0  0  1  dt ca 0  0  0; ...
     0  0  0  0  0  0  0  1  dt 0  0  0; ...
     0  0  0  0  0  0  0  0  1  0  0  0; ...
     0  0  0  0  0  0  0  0  0  1  0  0; ...
     0  0  0  0  0  0  0  0  0  0  1  0; ...
     0  0  0  0  0  0  0  0  0  0  0  1];
 
 B = [0 0 0 0 0 0 0 0 0 0 0 0 ; ...
      0 0 0 0 0 0 0 0 0 0 0 0 ; ...
      0 0 1 0 0 0 0 0 0 0 0 0 ; ...
      0 0 0 0 0 0 0 0 0 0 0 0 ; ...
      0 0 0 0 0 0 0 0 0 0 0 0 ; ...
      0 0 0 0 0 1 0 0 0 0 0 0 ; ...
      0 0 0 0 0 0 0 0 0 0 0 0 ; ...
      0 0 0 0 0 0 0 0 0 0 0 0 ; ...
      0 0 0 0 0 0 0 0 1 0 0 0 ; ...
      0 0 0 0 0 0 0 0 0 0 0 0 ; ...
      0 0 0 0 0 0 0 0 0 0 0 0 ; ...
      0 0 0 0 0 0 0 0 0 0 0 0];
 
C = eye(12);

u_k = [0; ...
       0; ...
       0; ...
       0; ...
       0; ...
       0; ...
       -ca*g; ...
       -g*dt; ...
       -g; ...
       0; ...
       0; ...
       0];
 
r1 = (0.004*9.81/16384)^2; r2 = 0.1^2;
R = [r1 0  0  0  0  0  0  0  0  0  0  0; ...
     0  r1 0  0  0  0  0  0  0  0  0  0; ...
     0  0  r1 0  0  0  0  0  0  0  0  0; ...
     0  0  0  r1 0  0  0  0  0  0  0  0; ...
     0  0  0  0  r1 0  0  0  0  0  0  0; ...
     0  0  0  0  0  r1 0  0  0  0  0  0; ...
     0  0  0  0  0  0  r1 0  0  0  0  0; ...
     0  0  0  0  0  0  0  r1 0  0  0  0; ...    
     0  0  0  0  0  0  0  0  r1 0  0  0; ...
     0  0  0  0  0  0  0  0  0  r2 0  0; ...
     0  0  0  0  0  0  0  0  0  0  r2 0; ...
     0  0  0  0  0  0  0  0  0  0  0  r2];
 
% Initialize non-constant matrices
g_k = zeros(12);

% Inialize output matrices
P = zeros(12);
x_k = zeros(12,1);

% Create actual data matrix.
% 1. Rotate pitch by -20 degrees
% 2. Ramp up to 10m/s velocity, then back down to zero in 0.5m/s.s per
%    dt
% 3. Run at constant velocity for the rest of the time steps.

% Perform for a total of 80 time steps. 41 of those will be the
% acceleration.
angle = -20*pi/180;
accel = 0.5;
z = zeros(9,80);
z(11,1) = angle; % Set the angle
z(3,:) = cos(pi/2-angle)*g; % Give an initial acceleration to the x and z 
z(9,:) = cos(pi/2-angle)*g; % axis to account for gravity.

z(3,2:22) = z(3,2:22) + a; % Set acceleration for the time period. Only
                           % accelerating in the X direciont (relative to
                           % the body).
                           
t_max = 5;


% Start time stepping 
for t=0:dt:t_max
    x_k = A*x_k + B*u_k;
end
           
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
